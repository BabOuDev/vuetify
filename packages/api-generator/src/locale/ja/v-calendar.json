{
  "props": {
    "categories": "「カテゴリ」ビューに表示するカテゴリとその順序を指定します。 カレンダーがイベントを使用する場合、この値で指定されていないイベントで指定されたカテゴリは、<code>category-hide-dynamic</code> が<code>true</code>でない限り、ビューで動的にレンダリングされます。",
    "categoryHideDynamic": "イベントで指定されたカテゴリが `categories` で定義されていない場合に非表示にするかどうかを設定します。",
    "categoryShowAll": "カテゴリにイベントがない場合でも、`category` ビューに定義されたすべてのカテゴリを表示するかどうかを設定します。",
    "categoryForInvalid": "無効なカテゴリを持つイベントを配置するカテゴリ。文字列でない場合、カテゴリは無効です。 デフォルトでは、この値が指定されるまで、カテゴリのないイベントは表示されません。",
    "categoryDays": "`category` ビューに表示する日数です。",
    "categoryText": "categories がオブジェクトのリストである場合、どのプロパティをカレンダーのカテゴリ テキストとして表示するかを決定できます。 いくつかのロジックを実行する関数を提供したり、プロパティ名を定義することができます。v-select の item-text に似ています。",
    "dayFormat": "日付の月の表記を指定されたロケールでフォーマットします。",
    "end": "`YYYY-MM-DD` の形式を含むカレンダーの終了日を指定します。これはカレンダーの `type` に依存して無視されることがあります。",
    "eventCategory": "*event* のカテゴリのプロパティを設定します。プロパティの代わりに、イベントを受け取ってカテゴリを返す関数を与えることができます。",
    "eventColor": "すべてのイベントの背景色、もしくはカレンダーに渡されたイベントオブジェクトを受け取って色を返す関数。",
    "eventEnd": "**イベント**の終了時刻のプロパティを設定します。",
    "eventHeight": "`month` ビューと `day` ビューの最上部にあるピクセル単位のイベントの高さ。",
    "eventMarginBottom": "イベント時のボトムのマージン",
    "eventMore": "特定のイベントが多すぎるカレンダーのdayで追加'button'が表示されるかどうか。 'その他5件' のように表示され、クリックされると `click:more` イベントを生成します。",
    "eventMoreText": "非表示のイベントの数を指定して、詳細 'button'に表示するテキスト。",
    "eventName": "*event*の表示名のプロパティを設定するか、カレンダーに渡されたイベントオブジェクトを第一引数として受け取り、その名前が時限付きイベント(true) なのか、一日以上のイベントなのかを示すフラグを指定する関数を設定します。",
    "eventOverlapMode": "One of `stack`, `column`, or a custom render function",
    "eventOverlapThreshold": "A value in minutes that's used to determine whether two timed events should be placed in column beside each other or should be treated as slightly overlapping events.",
    "eventRipple": "`v-ripple` ディレクティブを適用します。",
    "events": "開始時刻のタイムスタンプと、終了時刻のタイムスタンプ（オプション）の配列を入れます。終了時刻のタイムスタンプが指定されていない場合は、開始時刻のタイムスタンプの値が使われます。名前が指定されていない場合は、`event`スロットを実装する必要があります。",
    "eventStart": "**イベント**の開始時刻のプロパティを設定します。",
    "eventTextColor": "すべてのイベントでのテキスト色、もしくはカレンダーに渡されたイベントオブジェクトを受け取って色を返す関数。",
    "eventTimed": "If Dates or milliseconds are used as the start or end timestamp of an event, this prop can be a string to a property on the event that is truthy if the event is a timed event or a function which takes the event and returns a truthy value if the event is a timed event.",
    "firstInterval": "`day`ビューに表示する最初の間隔。 `intervalMinutes`が60に設定されていて、これが9に設定されている場合、ビューの最初の時間は午前9時になります。",
    "firstTime": "`day`ビューで最初に表示する時間。指定された場合、指定値で上書きされます。 これは真夜中から分数、`H:mm`の形式での文字列、または時と分数のプロパティを持つオブジェクトです。\nday` ビューに最初に表示する時間。指定された場合は、`firstInterval` の値を上書きします。これは深夜0時からの分minutes、`HH:mm` 形式の文字列、あるいは時と分のプロパティを持つオブジェクトを指定することができます。",
    "hideHeader": "If the header at the top of the `day` view should be visible.",
    "intervalCount": "`day`ビューに表示する期間の数。",
    "intervalFormat": "Formats time of day string that appears in the interval gutter of the `day` and `week` view to specified locale",
    "intervalHeight": "The height of an interval in pixels in the `day` view.",
    "intervalWidth": "`day`ビューの左側にある間隔の幅。",
    "intervalMinutes": "The number of minutes the intervals are in the `day` view. A common interval is 60 minutes so the intervals are an hour.",
    "intervalStyle": "間隔に適用する CSS スタイルを返します。",
    "locale": "カレンダーのロケール",
    "localeFirstDayOfYear": "年の最初の週を決定する日を設定します。**日曜日** の 0 から始まります。ISO 8601 の場合は、4 にする必要があります。",
    "maxDays": "`end` 日が設定されていない場合にカスタムカレンダーに表示する最大日数。",
    "minWeeks": "`month`または`week`ビューに表示する最小週数。",
    "monthFormat": "日に表示される月の文字列を指定されたロケールでフォーマットします",
    "now": "Override the day & time which is considered now. This is in the format of `YYYY-MM-DD hh:mm:ss`. The calendar is styled according to now.",
    "shortIntervals": "true の場合、`day` ビューの間隔は 9 AM ではなく 09:00 AM になります。",
    "shortMonths": "月名をショートバージョンにするかどうか (Jan vs January)",
    "shortWeekdays": "曜日名をショートバージョンにする (Mon vs Monday)。",
    "showIntervalLabel": "Checks if a given day and time should be displayed in the interval gutter of the `day` view.",
    "showMonthOnFirst": "月名を最初の日に表示する",
    "showWeek": "`month` ビューを使用するときに週番号を表示する",
    "start": "カレンダーの開始日 (YYYY-MM-DDを含む) を指定します。\nカレンダーの`type`の値に応じて無視することができます。",
    "type": "`month`、`week`、`day`、`4day`、`custom-weekly`、`custom-daily`、`category`のいずれかの文字列。 カスタムタイプは、`value`ではなく、コンポーネントに渡される`start`と`end`日付を参照します。",
    "v-model": "Sets the `value` property but also updates it when the link of a day is clicked.",
    "value": "カレンダーの期間を指定する `YYYY-MM-DD` 形式の日付。",
    "weekdayFormat": "ヘッダーに表示される曜日文字列を指定されたロケールにフォーマットします",
    "weekdays": "週のどの日を表示するかを指定します。月曜日から金曜日までのみ表示するには、値を `[1, 2, 3, 4, 5]` で指定します。 月曜日はじまりで1週間を表示するには、値を`[1, 2, 3, 4, 5, 6, 0]` と指定します。"
  },
  "slots": {
    "category": "The content placed in a category header for the `category` type. The category variable is null for events with invalid (non-string) categories.",
    "day-body": "The content that is placed in a `day` view in the scrollable interval container. The day & time object is passed through this slots scope.",
    "day-header": "The content that is placed in a `day` view in the top container. The day & time object is passed through this slots scope.",
    "day-label": "The content that is placed in the day of the month space in the `custom-weekly` or `month` view. The day & time object is passed through this slots scope.",
    "day-label-header": "The content that is placed in the day of the month space in the `week`, `day`, `4day`, or `custom-daily` view. The day & time object is passed through this slots scope.",
    "day-month": "The content that is placed in the month space in the `week` or `month` view. The day & time object is passed through this slots scope.",
    "day": "The content that is placed in a `week` or `month` view. The day & time object is passed through this slots scope.",
    "event": "The content placed in an event. This ignores the `event-name` prop.",
    "interval": "The content that is placed in the interval space in the `day` view. The day & time object is passed through this slots scope.",
    "interval-header": "The content that is placed in the interval space in the top left of the `day` view."
  },
  "events": {
    "change": "The range of days displayed on the calendar changed. This is triggered on initialization. The event passed is an object with start and end date objects.",
    "click:date": "The click event on the day of the month link. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "click:day": "The click event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "click:day-category": "The click event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "click:event": "特定のイベントのクリックイベント。渡されたイベントは日時オブジェクトです。",
    "click:interval": "The click event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "click:more": "The click event on the `X more` button on views with too many events in a day. Native mouse event is passed as a second argument.",
    "click:time": "The click event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "click:time-category": "The click event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "contextmenu:date": "The right-click event on the day of the month link. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "contextmenu:day": "The right-click event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "contextmenu:day-category": "The right-click event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "contextmenu:event": "The right-click event on an event. The event passed is the day & time object.",
    "contextmenu:interval": "The right-click event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "contextmenu:time": "The right-click event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "contextmenu:time-category": "The right-click event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "input": "An alias to the `click:date` event used to support v-model.",
    "mousedown:day": "The mousedown event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mousedown:day-category": "The mousedown event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mousedown:event": "The mousedown event on an event. The event passed is the day & time object.",
    "mousedown:interval": "The mousedown event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mousedown:time": "The mousedown event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mousedown:time-category": "The mousedown event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseenter:day": "The mouseenter event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseenter:day-category": "The mouseenter event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseenter:event": "The mouseenter event on an event. The event passed is the day & time object.",
    "mouseenter:interval": "The mouseenter event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseenter:time": "The mouseenter event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseenter:time-category": "The mouseenter event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseleave:day": "The mouseleave event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseleave:day-category": "The mouseleave event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseleave:event": "The mouseleave event on an event. The event passed is the day & time object.",
    "mouseleave:interval": "The mouseleave event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseleave:time": "The mouseleave event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseleave:time-category": "The mouseleave event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mousemove:day": "The mousemove event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mousemove:day-category": "The mousemove event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mousemove:event": "The mousemove event on an event. The event passed is the day & time object.",
    "mousemove:interval": "The mousemove event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mousemove:time": "The mousemove event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mousemove:time-category": "The mousemove event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseup:day": "The mouseup event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseup:day-category": "The mouseup event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseup:event": "The mouseup event on an event. The event passed is the day & time object.",
    "mouseup:interval": "The mouseup event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseup:time": "The mouseup event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseup:time-category": "The mouseup event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "moved": "One of the functions `next`, `prev`, and `move` was called. The event passed is the day object calculated for the movement.",
    "touchend:day": "The touchend event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchend:day-category": "The touchend event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchend:event": "The touchend event on am view. The event passed is the day & time object.",
    "touchend:interval": "The touchend event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchend:time": "The touchend event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchend:time-category": "The touchend event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchmove:day": "The touchmove event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchmove:day-category": "The touchmove event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchmove:event": "The touchmove event on an `event` view. The event passed is the day & time object.",
    "touchmove:interval": "The touchmove event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchmove:time": "The touchmove event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchmove:time-category": "The touchmove event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchstart:day": "The touchstart event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchstart:day-category": "The touchstart event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchstart:event": "The touchstart event on an event` view. The event passed is the day & time object.",
    "touchstart:interval": "The touchstart event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchstart:time": "The touchstart event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchstart:time-category": "The touchstart event at a specific time in the `category` view. The event passed is the day & time object Native mouse event is passed as a second argument.."
  },
  "functions": {
    "checkChange": "Checks for change in start and end dates. Updates and emits a change event if they have changed.",
    "formatTime": "A utility function to take a timestamp object (at least has hour and minute properties) and generates a time as a string.",
    "getFormatter": "A utility function given options to pass to Intl.DateTimeFormat and returns a function which can be given a Date to format as a string.",
    "minutesToPixels": "Converts minutes to a pixel value on the y-axis for the `day` view. If the view is not `day` then -1 is returned.",
    "move": "A generic function that moves the calendar next (if amount is positive) or previous (if amount is negative).",
    "next": "Triggers the input event with a date that would progress the calendar to the next timespan. If the type is `month` it will return a day in the next month, if the type is `4day` it will return a date 4 days after `value`/`v-model`, etc.",
    "prev": "Triggers the input event with a date that would progress the calendar to the previous timespan. If the type is `month` it will return a day in the previous month, if the type is `4day` it will return a date 4 days before `value`/`v-model`, etc.",
    "scrollToTime": "`day` ビューでスクロール可能な領域を指定した時間にスクロールします。 時刻が有効な形式でない場合、またはカレンダーが `day` ビューにない場合は、false が返されます。",
    "timeToY": "Converts a time to a pixel value on the y-axis for the `day` view. If the time is not in a valid format or if the calendar is not in the `day` view then false is returned.",
    "timeDelta": "Converts a time to a delta value for the `day` view. If the time is not in a valid format or if the calendar is not in the `day` view then false is returned. A delta value is typically between 0 and 1. If the time given is before the first interval then a negative number will be returned. If the time given is after the last interval than a number greater than 1 will be returned.",
    "updateEventVisibility": "If the calendar has events and `event-more` is truthy the days with too many events contain a 'button' to represent how many events had to be hidden.",
    "updateTimes": "Updates now & today in the calendar, possibly updating the styles in the calendar.",
    "getVisibleEvents": "Returns the list of events seen on the current calendar where each element returned has the following properties:<br>- `input`: the event passed in the `events` prop.<br>- `start`: a CalendarTimestamp of the start timestamp parsed.<br>- `startIdentifier`: a number which represents the day the event starts on.<br>- `startTimestampIdentifier`: a number which represents the day and time the event starts on.<br>- `end`: a CalendarTimestamp of the end timestamp parsed.<br>- `endIdentifier`: a number which represents the day the event ends on.<br>- `endTimestampIdentifier`: a number which represents the day & time the event ends on.<br>- `allDay`: if this is an all-day event (has no time specified in the `start`/`end` on the event).<br>- `index`: the index of the event in the given array.<br>- `category`: the category of the event if the calendar type is category, otherwise false.",
    "parseTimestamp": "タイムスタンプ入力を取得し、タイムスタンプオブジェクトを返すユーティリティ関数。",
    "timestampToDate": "A utility function which takes timestamp and returns a Date.",
    "parseEvent": "A utility function which takes an event and returns the parsed version of that event."
  }
}
