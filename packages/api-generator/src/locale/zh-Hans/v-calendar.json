{
  "props": {
    "categories": "指定要在`类别`视图中显示的类别. 这也控制类别的排序. 如果日历使用事件，则除非“category-hide-dynamic”为true，否则在此值中未指定的事件中指定的任何类别都将在视图中动态呈现",
    "categoryHideDynamic": "设置事件中指定的类别如果没有在`类别`中定义时是否隐藏.",
    "categoryShowAll": "设置`类别`视图是否显示所有定义的类别, 包含没有事件的类别.",
    "categoryForInvalid": "用于**放置具有无效类别的事件**的类别. 类别必须是字符串. 默认情况下, 在没有指定类别之前事件不会被显示.",
    "categoryDays": "在`类别`视图中显示的天数",
    "categoryText": "如果 category 是一个对象列表，你可以用它来决定打印出什么属性作为日历组件上的类别文本。你可以提供一个函数来执行一些逻辑，或者直接定义属性名称。它类似于 v-select 的 item-text。",
    "dayFormat": "将某日中出现的月字符串的日期格式化为指定区域设置",
    "end": "日历的结束日期（包括），格式为 `YYYY-MM-DD。根据日历的 `type`，这可能会被忽略。",
    "eventCategory": "设置*事件*的类别属性, 可以指定一个接受事件并返回类别的函数来代替该属性.",
    "eventColor": "所有事件的背景色或接受传递给日历的事件对象以返回颜色的函数。",
    "eventEnd": "设置 *event* 的结束时间戳的属性。",
    "eventHeight": "事件的高度（以像素为单位）在 `month` 视图和 `day` 视图的顶部。",
    "eventMarginBottom": "事件底部边距",
    "eventMore": "在给定日期内事件太多的日历上是否显示更多 'button'。它将显示类似于 '5 more' 的内容，当单击时会生成一个 `click:more` 事件。",
    "eventMoreText": "在给定隐藏事件数量的情况下，在更多 'button' 中显示的文本。",
    "eventName": "设置 *event* 的显示名称的属性，或接受作为第一个参数传递给日历的事件对象的函数，并设置一个标志，指示该名称是用于一个定时事件 (true) 或是一个超过一天的事件。",
    "eventOverlapMode": "`stack`, `column` 或自定义渲染函数之一",
    "eventOverlapThreshold": "以分钟为单位的值，用于确定两个定时事件应在彼此相邻的列中放置还是应视为稍微重叠的事件。",
    "eventRipple": "应用 `v-ripple` 指令。",
    "events": "事件对象数组，具有开始时间戳（可选）和名称及结束时间戳的属性。 如果未提供结束时间戳，则将使用开始值。 如果没有给出名称，则必须为 `event` \n 插槽提供一个实现。",
    "eventStart": "设置 *event* 的启动时间戳的属性。",
    "eventTextColor": "所有事件的文本颜色，或接受传递给日历的事件对象以返回颜色的函数。",
    "eventTimed": "如果使用日期或毫秒作为事件开始或结束的时间戳, 此prop可以是事件属性的字符串并且当事件是定时事件时返回真值, 或者也可以是一个接受事件的函数并且在事件是定时事件时返回一个真值.",
    "firstInterval": "在 `day` 视图中显示的第一个间隔。如果 `intervalMinutes` 设置为 60，而这个设置为 9，则视图中的第一次是上午9点。",
    "firstTime": "在`天`视图中显示的第一个(开始)时间。如果指定，则覆盖指定的任何“firstInterval”值。这可以是从午夜开始的分钟数，格式为“HH:mm”的字符串，或具有数字属性hour和minute的对象。",
    "hideHeader": "`day` 视图顶部的头部是否应该可见。",
    "intervalCount": "在 `day` 视图中显示的间隔数。",
    "intervalFormat": "将出现在 `day` 和 `week` 视图的间隔栏中的一天中的时间字符串格式化为指定的区域设置",
    "intervalHeight": "`day` 视图中间隔的高度（以像素为单位）。",
    "intervalWidth": "`day` 视图中左侧的间隔宽度。",
    "intervalMinutes": "间隔在 `day` 视图中的分钟数。普通间隔为 60 分钟，因此间隔为 1 小时。",
    "intervalStyle": "返回要应用于间隔的 CSS 样式。",
    "locale": "日历的区域设置。",
    "localeFirstDayOfYear": "设置决定一年中第一周的日期，从 0 开始，**星期日**。对于 ISO 8601，应该是 4。",
    "maxDays": "如果未设置 `end` 天，则在自定义日历中显示最大天数。",
    "minWeeks": "在 `month` 或 `week` 视图中显示的最小周数。",
    "monthFormat": "将日期中出现的月份字符串格式化为指定的区域设置",
    "now": "覆盖现在考虑的日期和时间。格式为 `YYYY-MM-DD hh:mm:ss`。日历是根据现在的情况设计的。",
    "shortIntervals": "如果为 true，则 `day` 视图中的间隔将为上午 9：00，而不是上午 09：00",
    "shortMonths": "是否应使用一个月的简短版本 (Jan vs January)。",
    "shortWeekdays": "是否应使用工作日的简短版本 (Mon vs Monday)。",
    "showIntervalLabel": "检查给定的日期和时间是否应显示在 `day` 视图的间隔栏中。",
    "showMonthOnFirst": "是否应在该月的第一天显示该月的名称。",
    "showWeek": "使用“月”视图时是否应该显示周数。",
    "start": "日历上的开始日期（包括），格式为 `YYYY-MM-DD`。 根据日历的 `type`，可以将其忽略。",
    "type": "一个“month”、“week”、“day”、“4day”、“custom-weekly”、“custom-daily”和“category”的之一的字符串。自定义类型查看传递给组件的“start”和“end”日期，而不是“value”。",
    "v-model": "设置 `value` 属性，但当点击某一天的链接时也更新它。",
    "value": "`YYYY-MM-DD` 格式的日期，用于确定日历的时间跨度。",
    "weekdayFormat": "将标题中显示的星期几字符串格式设置为指定的区域设置",
    "weekdays": "指定一周中要显示的日期。如果只显示周一到周五，可以使用 `[1, 2, 3, 4, 5]` \n 的值。要显示周一开始的一周，可以使用值 `[1, 2, 3, 4, 5, 6, 0]`。"
  },
  "slots": {
    "category": "放置在“category”类型的类别标头中的内容。对于具有无效（非字符串）类别的事件，category变量为null。",
    "day-body": "放置在可滚动间隔容器的 `day` 视图中的内容。day & time 对象通过此插槽作用域传递。",
    "day-header": "顶部容器中 `day` 视图中放置的内容。day & time 对象通过此插槽作用域传递。",
    "day-label": "放在 `custom-weekly` 或 `month` 视图中的/日空间中的内容。日期和时间对象会通过这个插槽范围。",
    "day-label-header": "在 `week`, `day`, `4day`, 或 `custom-daily` 视图中的月/日空间中放置的内容。日期和时间对象会通过这个插槽范围。",
    "day-month": "在 `week` 或 `month` 视图中放置在月份空间的内容。day & time 对象通过此插槽作用域传递。",
    "day": "放置在 `week` 或 `month` 视图中的内容。day & time 对象通过此插槽作用域传递。",
    "event": "放在事件中的内容。这就忽略了 `event-name` prop。",
    "interval": "在 `day` 视图中放置在间隔空间中的内容。day & time 对象通过此插槽作用域传递。",
    "interval-header": "放在 `day` 视图左上方的间隔空间中的内容。"
  },
  "events": {
    "change": "日历上显示的天数范围已更改。这在初始化时触发。传递的事件是一个具有开始日期和结束日期对象的对象。",
    "click:date": "The click event on the day of the month link. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "click:day": "The click event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "click:day-category": "The click event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "click:event": "特定事件上的单击事件。传递的事件是 day & time 对象。",
    "click:interval": "The click event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "click:more": "The click event on the `X more` button on views with too many events in a day. Native mouse event is passed as a second argument.",
    "click:time": "The click event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "click:time-category": "The click event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "contextmenu:date": "The right-click event on the day of the month link. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "contextmenu:day": "The right-click event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "contextmenu:day-category": "The right-click event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "contextmenu:event": "事件上的右键单击事件。 传递的事件是 day & time 对象。",
    "contextmenu:interval": "The right-click event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "contextmenu:time": "The right-click event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "contextmenu:time-category": "The right-click event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "input": "用于支持 v-model 的 `click:date` 事件的别名。",
    "mousedown:day": "The mousedown event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mousedown:day-category": "The mousedown event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mousedown:event": "事件上的鼠标按下事件。 传递的事件是 day & time 对象。",
    "mousedown:interval": "The mousedown event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mousedown:time": "The mousedown event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mousedown:time-category": "The mousedown event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseenter:day": "The mouseenter event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseenter:day-category": "在 `category` 视图中的鼠标中心事件。 通过的事件是当天对象。本机鼠标事件作为第二个参数传递。",
    "mouseenter:event": "事件上的鼠标移入事件。 传递的事件是 day & time 对象。",
    "mouseenter:interval": "The mouseenter event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseenter:time": "The mouseenter event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseenter:time-category": "The mouseenter event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseleave:day": "The mouseleave event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseleave:day-category": "The mouseleave event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseleave:event": "事件上的鼠标移出事件。 传递的事件是 day & time 对象。",
    "mouseleave:interval": "The mouseleave event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseleave:time": "The mouseleave event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseleave:time-category": "The mouseleave event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mousemove:day": "The mousemove event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mousemove:day-category": "The mousemove event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mousemove:event": "事件上的鼠标移动事件。 传递的事件是 day & time 对象。",
    "mousemove:interval": "The mousemove event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mousemove:time": "在 `category` 视图中的鼠标中心事件。 通过的事件是当天对象。本机鼠标事件作为第二个参数传递。",
    "mousemove:time-category": "The mousemove event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseup:day": "The mouseup event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseup:day-category": "The mouseup event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "mouseup:event": "事件上的鼠标松开事件。传递的事件是 day & time 对象。",
    "mouseup:interval": "The mouseup event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseup:time": "The mouseup event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "mouseup:time-category": "The mouseup event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "moved": "调用了函数 `next`、`prever` 和 `move` 中的一个。传递的事件是为移动计算的 day 对象。",
    "touchend:day": "The touchend event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchend:day-category": "The touchend event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchend:event": "视图上的触摸结束事件。 传递的事件是 day & time 对象。",
    "touchend:interval": "The touchend event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchend:time": "The touchend event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchend:time-category": "The touchend event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchmove:day": "The touchmove event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchmove:day-category": "The touchmove event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchmove:event": "在 `event` 视图上的触摸移动事件。 传递的事件是 day & time 对象。",
    "touchmove:interval": "The touchmove event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchmove:time": "The touchmove event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchmove:time-category": "The touchmove event at a specific time in the `category` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchstart:day": "The touchstart event on a day. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchstart:day-category": "The touchstart event on a day in the `category` view. The event passed is the day object. Native mouse event is passed as a second argument.",
    "touchstart:event": "事件视图上的触摸开始事件。 传递的事件是 day & time 对象。",
    "touchstart:interval": "The touchstart event at a specific interval label in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchstart:time": "The touchstart event at a specific time in the `day` view. The event passed is the day & time object. Native mouse event is passed as a second argument.",
    "touchstart:time-category": "The touchstart event at a specific time in the `category` view. The event passed is the day & time object Native mouse event is passed as a second argument.."
  },
  "functions": {
    "checkChange": "检查开始日期和结束日期的更改。 更新并发出更改事件（如果已更改）。",
    "formatTime": "一个实用工具函数，用于获取一个时间戳对象（至少具有小时和分钟属性）并以字符串形式生成时间。",
    "getFormatter": "一个实用函数，给出了传递给 Intl.DateTimeFormat 的选项。并返回一个函数，该函数可以将日期格式化为字符串。",
    "minutesToPixels": "将 `day` 视图的分钟数转换为 y轴 上的像素值。 如果视图不是 `day`，则返回-1。",
    "move": "一个通用函数，它将日历向前移动（如果数量为正）或向前移动（如果数量为负）。",
    "next": "用日期触发输入事件，该日期会使日历前进到下一个时间跨度。 如果类型为 `month`，则将在下个月返回一天；如果类型为 `4day`，则将在 `value` /`v-model` 之后 4 天返回日期，依此类推。",
    "prev": "使用日期触发输入事件，该日期会使日历前进到前一个时间跨度。 如果类型为 `month`，则将返回上个月的一天；如果类型为 `4day`，则将返回 `value`/`v-model` 之前 4 天的日期，依此类推。",
    "scrollToTime": "将 `day` 视图中的可滚动区域滚动到给定时间。 如果时间格式无效，或者日历不在 `day` 视图中，则返回 false。",
    "timeToY": "将 `day` 视图的时间转换为 y轴 上的像素值。 如果时间格式无效，或者日历不在 `day` 视图中，则返回 false。",
    "timeDelta": "将时间转换为“天”视图的增量值。如果时间格式无效或日历不在`天`视图中，则返回false。增量值通常介于0和1之间。如果给定的时间早于第一个间隔，则返回一个负数。如果给定的时间在最后一个间隔之后，则返回一个大于1的数字。",
    "updateEventVisibility": "如果日历中包含事件，并且 `event-more` 被启用，那么具有太多事件的日子将包含一个 'button' 以表示必须隐藏多少事件。",
    "updateTimes": "现在和今天在日历中更新，可能会更新日历中的样式。",
    "getVisibleEvents": "返回当前日历上显示的事件列表，其中返回的每个元素都具有以下属性：<br>-`input`：在“events”属性中传递的事件。<br>-`start`：解析的开始时间戳的日历时间戳。<br>-`startIdentifier`：表示事件开始日期的数字。<br>-`startTimestampIdentifier`:a表示事件开始的日期和时间的数字。<br>-`end`：解析的结束时间戳的日历时间戳。<br>—`endIdentifier`：表示事件结束的日期的数字。<br>-`endTimesIdentifier`：表示事件结束的日期和时间的数字。<br>-`allDay`：是否为全天事件（没有在事件的“start`/`end`中指定时间）。<br>-`index`：事件在给定数组中的索引。<br>-`category`：如果日历类型为category，则为事件的类别，否则为false。",
    "parseTimestamp": "一个以时间戳作为参数并返回该时间戳对象的实用工具函数。",
    "timestampToDate": "一个以时间戳作为参数并返回日期对象的实用工具函数。",
    "parseEvent": "一个以事件作为参数并返回该事件的解析版本的实用工具函数。"
  }
}
